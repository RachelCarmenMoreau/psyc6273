function g = gabor2d( lambda, theta, phi, sigma, n )% GABOR2D  Make a 2D Gabor patch%% g = gabor2d( lambda, theta, phi, sigma, n )% % lambda is the wavelength in pixels% theta is the orientation in radians; 0 radians is vertical% phi is the phase shift in radians% sigma is the scale constant (width)% n is the image size ( n x n )% make coordinate matricesmidn = floor(n/2)+1;xy = (1:n)-midn;[x,y]=meshgrid(xy,-xy);% make grating matrixgrating = sin( 2*pi*((x*cos(theta)+y*(sin(theta)))/lambda) - phi );% make unit-amplitude Gaussian window matrixwindow = exp(-(x.^2+y.^2)/(2*sigma^2));% make gaborg = grating.*window;return